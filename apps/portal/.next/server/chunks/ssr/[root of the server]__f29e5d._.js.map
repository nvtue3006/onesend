{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tuenguyen/www/onesend-v1/apps/portal/apps/portal/src/app/%5Blang%5D/page.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/apps/portal/src/app/[lang]/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/portal/src/app/[lang]/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/tuenguyen/www/onesend-v1/apps/portal/apps/portal/src/app/%5Blang%5D/page.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/apps/portal/src/app/[lang]/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/portal/src/app/[lang]/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmR,GAChT,iDACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/tuenguyen/www/onesend-v1/apps/portal/apps/portal/src/actions/get-pre-url-download.ts"],"sourcesContent":["\"use server\";\n\nimport { S3Client, GetObjectCommand } from \"@aws-sdk/client-s3\";\nimport { getSignedUrl } from \"@aws-sdk/s3-request-presigner\";\n\nconst s3 = new S3Client({\n  region: process.env.AWS_REGION,\n  credentials: {\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID ?? \"\",\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY ?? \"\",\n  },\n});\n\nexport const getPreUrlForDownload = async (\n  code: string,\n  secret: string | null,\n  expiresIn = 600, // Thời gian URL có hiệu lực, mặc định là 10 phút\n): Promise<string> => {\n  const bucketName = \"onesend-resource\";\n  const zipFileKey = secret ? `${code}-${secret}.zip` : `${code}.zip`;\n\n  try {\n    const command = new GetObjectCommand({\n      Bucket: bucketName,\n      Key: zipFileKey,\n    });\n\n    const downloadUrl = await getSignedUrl(s3, command, { expiresIn });\n\n    return downloadUrl;\n  } catch (err) {\n    console.error(\"Error creating temporary URL for download\", err);\n    throw new Error(\n      `Unable to create temporary download URL for file: ${zipFileKey}. Error: ${err}`,\n    );\n  }\n};\n\n//cách cũ\n// export const getPreUrlForDownload = async (\n//   code: string,\n// ): Promise<string[] | string> => {\n//   const bucketName = \"onesend-resource\";\n//   const prefix = `${code}/`;\n//   const presignedUrls: string[] = [];\n//\n//   try {\n//     const listCommand = new ListObjectsV2Command({\n//       Bucket: bucketName,\n//       Prefix: prefix,\n//     });\n//\n//     const listData = await s3.send(listCommand);\n//\n//     if (!listData.Contents || listData.Contents.length === 0) {\n//       return `No file found with code: ${code}`;\n//     }\n//\n//     for (const object of listData.Contents) {\n//       const objectKey = object.Key;\n//\n//       if (!objectKey || objectKey.endsWith(\"/\")) continue;\n//\n//       const command = new GetObjectCommand({\n//         Bucket: bucketName,\n//         Key: objectKey,\n//       });\n//\n//       const presignedUrl = await getSignedUrl(s3, command, {\n//         expiresIn: 3600,\n//       });\n//\n//       presignedUrls.push(presignedUrl);\n//     }\n//   } catch (err) {\n//     console.error(\"Error creating temporary URL\", err);\n//     throw new Error(\"Unable to create temporary URL\");\n//   }\n//\n//   return presignedUrls;\n// };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAKA,MAAM,KAAK,IAAI,SAAS;IACtB,QAAQ,QAAQ,GAAG,CAAC,UAAU;IAC9B,aAAa;QACX,aAAa,QAAQ,GAAG,CAAC,iBAAiB,IAAI;QAC9C,iBAAiB,QAAQ,GAAG,CAAC,qBAAqB,IAAI;IACxD;AACF;AAEO,MAAM,uBAAuB,OAClC,MACA,QACA,YAAY,GAAG;IAEf,MAAM,aAAa;IACnB,MAAM,aAAa,SAAS,GAAG,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,GAAG,KAAK,IAAI,CAAC;IAEnE,IAAI;QACF,MAAM,UAAU,IAAI,iBAAiB;YACnC,QAAQ;YACR,KAAK;QACP;QAEA,MAAM,cAAc,MAAM,aAAa,IAAI,SAAS;YAAE;QAAU;QAEhE,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,6CAA6C;QAC3D,MAAM,IAAI,MACR,CAAC,kDAAkD,EAAE,WAAW,SAAS,EAAE,KAAK;IAEpF;AACF,GAEA,SAAS;CACT,8CAA8C;CAC9C,kBAAkB;CAClB,qCAAqC;CACrC,2CAA2C;CAC3C,+BAA+B;CAC/B,wCAAwC;CACxC,EAAE;CACF,UAAU;CACV,qDAAqD;CACrD,4BAA4B;CAC5B,wBAAwB;CACxB,UAAU;CACV,EAAE;CACF,mDAAmD;CACnD,EAAE;CACF,kEAAkE;CAClE,mDAAmD;CACnD,QAAQ;CACR,EAAE;CACF,gDAAgD;CAChD,sCAAsC;CACtC,EAAE;CACF,6DAA6D;CAC7D,EAAE;CACF,+CAA+C;CAC/C,8BAA8B;CAC9B,0BAA0B;CAC1B,YAAY;CACZ,EAAE;CACF,+DAA+D;CAC/D,2BAA2B;CAC3B,YAAY;CACZ,EAAE;CACF,0CAA0C;CAC1C,QAAQ;CACR,oBAAoB;CACpB,0DAA0D;CAC1D,yDAAyD;CACzD,MAAM;CACN,EAAE;CACF,0BAA0B;CAC1B,KAAK;;;IAnEQ;;AAAA,+OAAA"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///Users/tuenguyen/www/onesend-v1/apps/portal/apps/portal/src/actions/encrypt-text.ts"],"sourcesContent":["\"use server\";\nimport crypto from \"crypto\";\n\nconst SECRET_KEY = Buffer.isBuffer(process.env.SECRET_KEY_TEXT)\n  ? process.env.SECRET_KEY_TEXT\n  : crypto\n      .createHash(\"sha256\")\n      .update(process.env.SECRET_KEY_TEXT || \"\")\n      .digest();\n\n// Hàm mã hóa\nexport const encryptText = async (text: string) => {\n  try {\n    const iv = crypto.randomBytes(16);\n    console.log(\"Generated IV:\", iv.toString(\"hex\"));\n\n    const cipher = crypto.createCipheriv(\"aes-256-cbc\", SECRET_KEY, iv);\n    let encrypted = cipher.update(text, \"utf8\", \"hex\");\n    encrypted += cipher.final(\"hex\");\n\n    console.log(\"Encrypted Text:\", encrypted);\n    return `${iv.toString(\"hex\")}:${encrypted}`;\n  } catch (error) {\n    console.error(\"Encryption failed:\", error);\n    throw new Error(\"Failed to encrypt text\");\n  }\n};\n\n// Hàm giải mã\nexport const decryptText = async (encryptedText: string) => {\n  try {\n    const [iv, encrypted] = encryptedText.split(\":\");\n\n    if (!iv || !encrypted) {\n      throw new Error(\"Invalid encrypted text format\");\n    }\n    const decipher = crypto.createDecipheriv(\n      \"aes-256-cbc\",\n      SECRET_KEY,\n      Buffer.from(iv, \"hex\"), // IV từ chuỗi hex\n    );\n\n    let decrypted = decipher.update(encrypted, \"hex\", \"utf8\");\n    decrypted += decipher.final(\"utf8\");\n\n    return decrypted; // Trả về dữ liệu đã giải mã\n  } catch (error) {\n    console.error(\"Decryption failed:\", error);\n    throw new Error(\"Failed to decrypt text\");\n  }\n};\n"],"names":[],"mappings":";;;;;;AACA;;;;;AAEA,MAAM,aAAa,OAAO,QAAQ,CAAC,QAAQ,GAAG,CAAC,eAAe,IAC1D,QAAQ,GAAG,CAAC,eAAe,GAC3B,+FAAA,CAAA,UAAM,CACH,UAAU,CAAC,UACX,MAAM,CAAC,QAAQ,GAAG,CAAC,eAAe,IAAI,IACtC,MAAM;AAGN,MAAM,cAAc,OAAO;IAChC,IAAI;QACF,MAAM,KAAK,+FAAA,CAAA,UAAM,CAAC,WAAW,CAAC;QAC9B,QAAQ,GAAG,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QAEzC,MAAM,SAAS,+FAAA,CAAA,UAAM,CAAC,cAAc,CAAC,eAAe,YAAY;QAChE,IAAI,YAAY,OAAO,MAAM,CAAC,MAAM,QAAQ;QAC5C,aAAa,OAAO,KAAK,CAAC;QAE1B,QAAQ,GAAG,CAAC,mBAAmB;QAC/B,OAAO,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,EAAE,WAAW;IAC7C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,MAAM,IAAI,MAAM;IAClB;AACF;AAGO,MAAM,cAAc,OAAO;IAChC,IAAI;QACF,MAAM,CAAC,IAAI,UAAU,GAAG,cAAc,KAAK,CAAC;QAE5C,IAAI,CAAC,MAAM,CAAC,WAAW;YACrB,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,WAAW,+FAAA,CAAA,UAAM,CAAC,gBAAgB,CACtC,eACA,YACA,OAAO,IAAI,CAAC,IAAI;QAGlB,IAAI,YAAY,SAAS,MAAM,CAAC,WAAW,OAAO;QAClD,aAAa,SAAS,KAAK,CAAC;QAE5B,OAAO,WAAW,4BAA4B;IAChD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,MAAM,IAAI,MAAM;IAClB;AACF;;;IAvCa;IAkBA;;AAlBA,+OAAA;AAkBA,+OAAA"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///Users/tuenguyen/www/onesend-v1/apps/portal/apps/portal/src/actions/create-request.ts"],"sourcesContent":["'use server';\n\nimport { getClient } from '../../lib/mongodb';\nimport { encryptText } from '@/actions/encrypt-text';\n\ntype RequestType = 'TEXT' | 'FILE';\n\nconst insertRequest = async (\n\tcontent: string,\n\tcode: string,\n\ttype: RequestType,\n\tsecret: string | null,\n\tiv?: string, // Optional\n) => {\n\tconst client = await getClient();\n\tif (!client) {\n\t\tthrow new Error('Database connection error');\n\t}\n\n\ttry {\n\t\tconst db = client.db('onesend');\n\t\tconst collection = db.collection('request');\n\n\t\t// Validate the 6-digit code\n\t\tif (!code || code.length !== 6) {\n\t\t\tthrow new Error('Invalid code format. Code must be a 6-digit string.');\n\t\t}\n\n\t\t// Insert the request into the database\n\t\tawait collection.insertOne({\n\t\t\tcontent,\n\t\t\tcode,\n\t\t\ttype,\n\t\t\tsecret, // Save `secret` explicitly\n\t\t\tiv,\n\t\t\tcreated_at: new Date(),\n\t\t});\n\t} catch (error) {\n\t\tconsole.error('Database insertion error', error);\n\t\tthrow new Error('Failed to insert request into database');\n\t} finally {\n\t\tawait client.close();\n\t}\n};\n\n// Hàm tạo request cho TEXT\nexport const createRequest = async (\n\tcontent: string,\n\tcode: string,\n\tsecret?: string | null, // Allow secret to be optional or null\n) => {\n\ttry {\n\t\t// Validate the 6-digit code\n\t\tif (!code || code.length !== 6) {\n\t\t\tthrow new Error('Invalid code format. Code must be a 6-digit string.');\n\t\t}\n\n\t\t// Validate the 4-digit secret if provided\n\t\tif (secret && secret.length !== 4) {\n\t\t\tthrow new Error('Invalid secret format. Secret must be a 4-digit string.');\n\t\t}\n\n\t\t// Encrypt the content\n\t\tconst encryptedContent = await encryptText(content);\n\t\tif (!encryptedContent) {\n\t\t\tthrow new Error('Encryption failed');\n\t\t}\n\n\t\t// Insert the request into the database\n\t\tawait insertRequest(encryptedContent, code, 'TEXT', secret || null);\n\n\t\tconsole.log('Request created successfully:', {\n\t\t\tencryptedContent,\n\t\t\tcode,\n\t\t\tsecret: secret || 'No secret provided',\n\t\t});\n\t} catch (error) {\n\t\tconsole.error('Failed to create request:', error);\n\t\tthrow new Error('Unable to create request. Please try again later.');\n\t}\n};\n\n// export const createPreUrlDownload = async (code: string, secret: string) => {\n//   await insertRequest(\"Save in s3\", code, secret, \"FILE\");\n//   console.log(\"File request created successfully:\", { code });\n// };\n\n//Hàm tạo request cho FILE\nexport const createPreUrlDownload = async (\n\tcode: string,\n\tsecret?: string | null, // Cho phép undefined\n) => {\n\ttry {\n\t\tawait insertRequest('Save in s3', code, 'FILE', secret || null);\n\n\t\tconsole.log('File request created successfully:', {\n\t\t\tcode,\n\t\t\tsecret: secret || 'No secret provided',\n\t\t\tcreated_at: new Date(),\n\t\t});\n\t} catch (error) {\n\t\tconsole.error('Failed to create file request:', error);\n\t\tthrow new Error('Failed to create file request in the database.');\n\t}\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAGA;;;;;;AAIA,MAAM,gBAAgB,OACrB,SACA,MACA,MACA,QACA;IAEA,MAAM,SAAS,MAAM;IACrB,IAAI,CAAC,QAAQ;QACZ,MAAM,IAAI,MAAM;IACjB;IAEA,IAAI;QACH,MAAM,KAAK,OAAO,EAAE,CAAC;QACrB,MAAM,aAAa,GAAG,UAAU,CAAC;QAEjC,4BAA4B;QAC5B,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;YAC/B,MAAM,IAAI,MAAM;QACjB;QAEA,uCAAuC;QACvC,MAAM,WAAW,SAAS,CAAC;YAC1B;YACA;YACA;YACA;YACA;YACA,YAAY,IAAI;QACjB;IACD,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,MAAM,IAAI,MAAM;IACjB,SAAU;QACT,MAAM,OAAO,KAAK;IACnB;AACD;AAGO,MAAM,gBAAgB,OAC5B,SACA,MACA;IAEA,IAAI;QACH,4BAA4B;QAC5B,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;YAC/B,MAAM,IAAI,MAAM;QACjB;QAEA,0CAA0C;QAC1C,IAAI,UAAU,OAAO,MAAM,KAAK,GAAG;YAClC,MAAM,IAAI,MAAM;QACjB;QAEA,sBAAsB;QACtB,MAAM,mBAAmB,MAAM,CAAA,GAAA,mJAAA,CAAA,cAAW,AAAD,EAAE;QAC3C,IAAI,CAAC,kBAAkB;YACtB,MAAM,IAAI,MAAM;QACjB;QAEA,uCAAuC;QACvC,MAAM,cAAc,kBAAkB,MAAM,QAAQ,UAAU;QAE9D,QAAQ,GAAG,CAAC,iCAAiC;YAC5C;YACA;YACA,QAAQ,UAAU;QACnB;IACD,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM,IAAI,MAAM;IACjB;AACD;AAQO,MAAM,uBAAuB,OACnC,MACA;IAEA,IAAI;QACH,MAAM,cAAc,cAAc,MAAM,QAAQ,UAAU;QAE1D,QAAQ,GAAG,CAAC,sCAAsC;YACjD;YACA,QAAQ,UAAU;YAClB,YAAY,IAAI;QACjB;IACD,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,kCAAkC;QAChD,MAAM,IAAI,MAAM;IACjB;AACD;;;IA1Da;IA0CA;;AA1CA,+OAAA;AA0CA,+OAAA"}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///Users/tuenguyen/www/onesend-v1/apps/portal/apps/portal/src/actions/get-request.ts"],"sourcesContent":["\"use server\";\n\nimport { getClient } from \"../../lib/mongodb\";\n\nexport const getRequest = async (\n  code: string,\n  secret: string,\n): Promise<{\n  error: string;\n  content: string;\n  type: string;\n  secret: string;\n  files?: { name: string }[];\n  iv?: string;\n}> => {\n  try {\n    const client = await getClient();\n    if (!client) {\n      throw new Error(\"DB ERROR\");\n    }\n\n    const db = client.db(\"onesend\");\n    const collection = db.collection(\"request\");\n\n    // Kiểm tra trường hợp chỉ có code nhưng không có secret\n    if (secret === \"\" || secret === null) {\n      const request = await collection.findOne({ code });\n\n      if (!request) {\n        return {\n          error: \"NOT_FOUND\",\n          content: \"\",\n          type: \"\",\n          secret: \"\",\n          iv: \"\",\n          files: [],\n        };\n      }\n\n      if (request.secret) {\n        return {\n          error: \"INVALID_SECRET\",\n          content: \"\",\n          type: \"\",\n          secret: \"\",\n          iv: \"\",\n          files: [],\n        };\n      }\n      await collection.deleteOne({ _id: request._id });\n\n      return {\n        error: \"\",\n        content: request.content,\n        type: request.type,\n        secret: request.secret,\n        iv: request.iv || \"\",\n        files: request.files || [],\n      };\n    }\n\n    const request = await collection.findOne({ code, secret });\n\n    if (!request) {\n      return {\n        error: \"NOT_FOUND\",\n        content: \"\",\n        type: \"\",\n        secret: \"\",\n        iv: \"\",\n        files: [],\n      };\n    }\n\n    await collection.deleteOne({ _id: request._id });\n\n    return {\n      error: \"\",\n      content: request.content,\n      type: request.type,\n      secret: request.secret,\n      iv: request.iv || \"\",\n      files: request.files || [],\n    };\n  } catch (e) {\n    console.error(\"Error in getRequest:\", e);\n    return {\n      error: \"DB_ERROR\",\n      content: \"\",\n      type: \"\",\n      secret: \"\",\n      iv: \"\",\n      files: [],\n    };\n  }\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAIO,MAAM,aAAa,OACxB,MACA;IASA,IAAI;QACF,MAAM,SAAS,MAAM;QACrB,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,KAAK,OAAO,EAAE,CAAC;QACrB,MAAM,aAAa,GAAG,UAAU,CAAC;QAEjC,wDAAwD;QACxD,IAAI,WAAW,MAAM,WAAW,MAAM;YACpC,MAAM,UAAU,MAAM,WAAW,OAAO,CAAC;gBAAE;YAAK;YAEhD,IAAI,CAAC,SAAS;gBACZ,OAAO;oBACL,OAAO;oBACP,SAAS;oBACT,MAAM;oBACN,QAAQ;oBACR,IAAI;oBACJ,OAAO,EAAE;gBACX;YACF;YAEA,IAAI,QAAQ,MAAM,EAAE;gBAClB,OAAO;oBACL,OAAO;oBACP,SAAS;oBACT,MAAM;oBACN,QAAQ;oBACR,IAAI;oBACJ,OAAO,EAAE;gBACX;YACF;YACA,MAAM,WAAW,SAAS,CAAC;gBAAE,KAAK,QAAQ,GAAG;YAAC;YAE9C,OAAO;gBACL,OAAO;gBACP,SAAS,QAAQ,OAAO;gBACxB,MAAM,QAAQ,IAAI;gBAClB,QAAQ,QAAQ,MAAM;gBACtB,IAAI,QAAQ,EAAE,IAAI;gBAClB,OAAO,QAAQ,KAAK,IAAI,EAAE;YAC5B;QACF;QAEA,MAAM,UAAU,MAAM,WAAW,OAAO,CAAC;YAAE;YAAM;QAAO;QAExD,IAAI,CAAC,SAAS;YACZ,OAAO;gBACL,OAAO;gBACP,SAAS;gBACT,MAAM;gBACN,QAAQ;gBACR,IAAI;gBACJ,OAAO,EAAE;YACX;QACF;QAEA,MAAM,WAAW,SAAS,CAAC;YAAE,KAAK,QAAQ,GAAG;QAAC;QAE9C,OAAO;YACL,OAAO;YACP,SAAS,QAAQ,OAAO;YACxB,MAAM,QAAQ,IAAI;YAClB,QAAQ,QAAQ,MAAM;YACtB,IAAI,QAAQ,EAAE,IAAI;YAClB,OAAO,QAAQ,KAAK,IAAI,EAAE;QAC5B;IACF,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;YACL,OAAO;YACP,SAAS;YACT,MAAM;YACN,QAAQ;YACR,IAAI;YACJ,OAAO,EAAE;QACX;IACF;AACF;;;IA3Fa;;AAAA,+OAAA"}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file:///Users/tuenguyen/www/onesend-v1/apps/portal/apps/portal/src/actions/get-pre-url.ts"],"sourcesContent":["\"use server\";\nimport { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\nimport { getSignedUrl } from \"@aws-sdk/s3-request-presigner\";\n\nconst s3 = new S3Client({\n  region: process.env.AWS_REGION,\n  credentials: {\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID ?? \"\",\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY ?? \"\",\n  },\n});\n\nconst getPreUrl = async (\n  code: string,\n  secret: string | null,\n): Promise<string> => {\n  const bucketName = \"onesend-resource\";\n  const zipFileName = secret ? `${code}-${secret}.zip` : `${code}.zip`; // Tên file S3\n\n  const command = new PutObjectCommand({\n    Bucket: bucketName,\n    Key: zipFileName,\n    ContentType: \"application/zip\",\n  });\n\n  try {\n    const uploadUrl = await getSignedUrl(s3, command, { expiresIn: 600 });\n    return uploadUrl;\n  } catch (error) {\n    console.error(\"Error creating pre-signed URL\", error);\n    throw new Error(\"Unable to create pre-signed URL for upload\");\n  }\n};\n\nexport default getPreUrl;\n\n//cách cũ, tải lên từng file\n// const getPreUrl = async (\n//   fileKeys: string[],\n//   code: string,\n//   type: \"FILE\",\n// ): Promise<string[]> => {\n//   if (type === \"FILE\") {\n//     const urls: string[] = [];\n//\n//     for (const key of fileKeys) {\n//       const command = new PutObjectCommand({\n//         Bucket: \"onesend-resource\",\n//         Key: `${code}/${key}`,\n//         ContentType: \"fileType\",\n//       });\n//       const url = await getSignedUrl(s3, command, { expiresIn: 300 });\n//       urls.push(url);\n//     }\n//     return urls;\n//   }\n//   return [];\n// };\n// export default getPreUrl;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAIA,MAAM,KAAK,IAAI,SAAS;IACtB,QAAQ,QAAQ,GAAG,CAAC,UAAU;IAC9B,aAAa;QACX,aAAa,QAAQ,GAAG,CAAC,iBAAiB,IAAI;QAC9C,iBAAiB,QAAQ,GAAG,CAAC,qBAAqB,IAAI;IACxD;AACF;AAEA,MAAM,YAAY,OAChB,MACA;IAEA,MAAM,aAAa;IACnB,MAAM,cAAc,SAAS,GAAG,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,GAAG,KAAK,IAAI,CAAC,EAAE,cAAc;IAEpF,MAAM,UAAU,IAAI,iBAAiB;QACnC,QAAQ;QACR,KAAK;QACL,aAAa;IACf;IAEA,IAAI;QACF,MAAM,YAAY,MAAM,aAAa,IAAI,SAAS;YAAE,WAAW;QAAI;QACnE,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM,IAAI,MAAM;IAClB;AACF;uCAEe;;;IAAA;;AAAA,+OAAA;CAEf,4BAA4B;CAC5B,4BAA4B;CAC5B,wBAAwB;CACxB,kBAAkB;CAClB,kBAAkB;CAClB,4BAA4B;CAC5B,2BAA2B;CAC3B,iCAAiC;CACjC,EAAE;CACF,oCAAoC;CACpC,+CAA+C;CAC/C,sCAAsC;CACtC,iCAAiC;CACjC,mCAAmC;CACnC,YAAY;CACZ,yEAAyE;CACzE,wBAAwB;CACxB,QAAQ;CACR,mBAAmB;CACnB,MAAM;CACN,eAAe;CACf,KAAK;CACL,4BAA4B"}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file:///Users/tuenguyen/www/onesend-v1/apps/portal/apps/portal/src/actions/detele-code-s3.ts"],"sourcesContent":["\"use server\";\nimport {\n  S3Client,\n  ListObjectsV2Command,\n  DeleteObjectsCommand,\n} from \"@aws-sdk/client-s3\";\n\n// Initialize S3 client\nconst s3 = new S3Client({\n  region: process.env.AWS_REGION,\n  credentials: {\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID ?? \"\",\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY ?? \"\",\n  },\n});\n\nexport const deleteS3Handler = async (code: string, secret: string | null) => {\n  const bucketName = \"onesend-resource\";\n  const prefix = secret ? `${code}-${secret}.zip` : `${code}.zip`;\n\n  try {\n    const listCommand = new ListObjectsV2Command({\n      Bucket: bucketName,\n      Prefix: prefix,\n    });\n    const listData = await s3.send(listCommand);\n\n    if (listData.Contents && listData.Contents.length > 0) {\n      const deleteParams = {\n        Bucket: bucketName,\n        Delete: {\n          Objects: listData.Contents.map((object) => ({ Key: object.Key! })),\n        },\n      };\n\n      const deleteCommand = new DeleteObjectsCommand(deleteParams);\n      await s3.send(deleteCommand);\n\n      console.log(`Successfully deleted all files with prefix: ${prefix}`);\n    } else {\n      console.log(`No files found with prefix: ${prefix}`);\n    }\n  } catch (err) {\n    console.error(\"Error deleting files from S3\", err);\n    throw new Error(\"Unable to delete files from S3\");\n  }\n};\n\n// export const deleteS3Handler = async (code: string) => {\n//     const bucketName = \"onesend-resource\";\n//     const prefix = `${code}/`;\n//\n//     try {\n//         const listCommand = new ListObjectsV2Command({\n//             Bucket: bucketName,\n//             Prefix: prefix,\n//         });\n//         const listData = await s3.send(listCommand);\n//\n//         if (listData.Contents && listData.Contents.length > 0) {\n//             for (const object of listData.Contents) {\n//                 const objectKey = object.Key;\n//                 if (!objectKey) continue;\n//\n//                 const deleteCommand = new DeleteObjectCommand({\n//                     Bucket: bucketName,\n//                     Key: objectKey,\n//                 });\n//                 await s3.send(deleteCommand);\n//             }\n//             console.log(`Đã xóa thành công tất cả các file với mã prefix: ${code}`);\n//         } else {\n//             console.log(`Không tìm thấy file nào với mã prefix: ${code}`);\n//         }\n//     } catch (err) {\n//         console.error(\"Lỗi khi xóa file từ S3\", err);\n//         throw new Error(\"Không thể xóa file từ S3\");\n//     }\n// };\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAOA,uBAAuB;AACvB,MAAM,KAAK,IAAI,SAAS;IACtB,QAAQ,QAAQ,GAAG,CAAC,UAAU;IAC9B,aAAa;QACX,aAAa,QAAQ,GAAG,CAAC,iBAAiB,IAAI;QAC9C,iBAAiB,QAAQ,GAAG,CAAC,qBAAqB,IAAI;IACxD;AACF;AAEO,MAAM,kBAAkB,OAAO,MAAc;IAClD,MAAM,aAAa;IACnB,MAAM,SAAS,SAAS,GAAG,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,GAAG,KAAK,IAAI,CAAC;IAE/D,IAAI;QACF,MAAM,cAAc,IAAI,qBAAqB;YAC3C,QAAQ;YACR,QAAQ;QACV;QACA,MAAM,WAAW,MAAM,GAAG,IAAI,CAAC;QAE/B,IAAI,SAAS,QAAQ,IAAI,SAAS,QAAQ,CAAC,MAAM,GAAG,GAAG;YACrD,MAAM,eAAe;gBACnB,QAAQ;gBACR,QAAQ;oBACN,SAAS,SAAS,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAW,CAAC;4BAAE,KAAK,OAAO,GAAG;wBAAE,CAAC;gBAClE;YACF;YAEA,MAAM,gBAAgB,IAAI,qBAAqB;YAC/C,MAAM,GAAG,IAAI,CAAC;YAEd,QAAQ,GAAG,CAAC,CAAC,4CAA4C,EAAE,QAAQ;QACrE,OAAO;YACL,QAAQ,GAAG,CAAC,CAAC,4BAA4B,EAAE,QAAQ;QACrD;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM,IAAI,MAAM;IAClB;AACF,GAEA,2DAA2D;CAC3D,6CAA6C;CAC7C,iCAAiC;CACjC,EAAE;CACF,YAAY;CACZ,yDAAyD;CACzD,kCAAkC;CAClC,8BAA8B;CAC9B,cAAc;CACd,uDAAuD;CACvD,EAAE;CACF,mEAAmE;CACnE,wDAAwD;CACxD,gDAAgD;CAChD,4CAA4C;CAC5C,EAAE;CACF,kEAAkE;CAClE,0CAA0C;CAC1C,sCAAsC;CACtC,sBAAsB;CACtB,gDAAgD;CAChD,gBAAgB;CAChB,uFAAuF;CACvF,mBAAmB;CACnB,6EAA6E;CAC7E,YAAY;CACZ,sBAAsB;CACtB,wDAAwD;CACxD,uDAAuD;CACvD,QAAQ;CACR,KAAK;;;IA9DQ;;AAAA,+OAAA"}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 587, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}